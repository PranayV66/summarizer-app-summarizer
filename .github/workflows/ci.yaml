name: Publish to ECR
on:
  push:
    branches:
      - k8s
    paths:
      - 'frontend/**'
      - 'backend/**'
      - '.github/workflows/**'
      - 'charts/summarizer/**'

jobs:
  paths-filter:
    runs-on: ubuntu-latest
    outputs:
      changed_frontend: ${{ steps.filter.outputs.frontend }}
      changed_backend: ${{ steps.filter.outputs.backend }}
      changed_workflow: ${{ steps.filter.outputs.workflow }}
      changed_charts: ${{ steps.filter.outputs.charts }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Paths Filter
        id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            frontend:
              - 'frontend/**'
            backend:
              - 'backend/**'
            workflow:
              - '.github/workflows/**'
            charts:
              - 'charts/summarizer/**'

  build-and-push-backend:
    needs: paths-filter
    runs-on: ubuntu-latest
    if: ${{ needs.paths-filter.outputs.changed_backend == 'true' || needs.paths-filter.outputs.changed_workflow == 'true' || needs.paths-filter.outputs.changed_charts == 'true' }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}        

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: true

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPO_NAME_BACKEND }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./backend
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Set up Helm
        uses: azure/setup-helm@v4.2.0
        with:
          version: v3.10.0

      - name: Helm Dependencies Update
        run: helm dependency update ./charts/summarizer

  build-and-push-frontend:
    needs: paths-filter
    runs-on: ubuntu-latest
    if: ${{ needs.paths-filter.outputs.changed_frontend == 'true' || needs.paths-filter.outputs.changed_workflow == 'true' || needs.paths-filter.outputs.changed_charts == 'true' }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}        

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: true

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPO_NAME_FRONTEND }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./frontend
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Set up Helm
        uses: azure/setup-helm@v4.2.0
        with:
          version: v3.10.0

      - name: Helm Dependencies Update
        run: helm dependency update ./charts/summarizer

  update-tags-and-push-to-git:
    needs: [build-and-push-backend, build-and-push-frontend]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Update backend values yaml
        env:
          ECR_REGISTRY: ${{ secrets.AWS_ECR_REGISTRY_NAME }}
          ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPO_NAME_BACKEND }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          yq eval '.imageBackend.repository = strenv(ECR_REGISTRY) + "/" + strenv(ECR_REPOSITORY)' -i ./charts/summarizer/values.yaml
          yq eval '.imageBackend.tag = strenv(IMAGE_TAG)' -i ./charts/summarizer/values.yaml

      - name: Update frontend values yaml
        env:
          ECR_REGISTRY: ${{ secrets.AWS_ECR_REGISTRY_NAME }}
          ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPO_NAME_FRONTEND }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          yq eval '.imageFrontend.repository = strenv(ECR_REGISTRY) + "/" + strenv(ECR_REPOSITORY)' -i ./charts/summarizer/values.yaml
          yq eval '.imageFrontend.tag = strenv(IMAGE_TAG)' -i ./charts/summarizer/values.yaml

      - name: Increment Chart Version
        run: |
          current_version=$(yq eval '.version' ./charts/summarizer/Chart.yaml)
          IFS='.' read -r major minor patch <<< "$current_version"
          patch=$((patch+1))
          new_version="$major.$minor.$patch"
          echo "Current version: $current_version"
          echo "New version: $new_version"
          yq eval ".version = \"$new_version\"" -i ./charts/summarizer/Chart.yaml

      - name: Add and commit changes
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add ./charts/summarizer/values.yaml ./charts/summarizer/Chart.yaml
          git commit -m "Set .image.repository and .image.tag" || echo "No changes to commit"

      - name: Push changes to the k8s branch
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GH_PAT }}
          branch: k8s